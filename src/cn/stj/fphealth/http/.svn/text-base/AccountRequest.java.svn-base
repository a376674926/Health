package com.chinacnit.taoa.http;

import android.text.TextUtils;
import android.util.Log;

import com.android.volley.AuthFailureError;
import com.android.volley.NetworkResponse;
import com.android.volley.Request;
import com.android.volley.Response;
import com.android.volley.toolbox.HttpHeaderParser;

import org.json.JSONException;
import org.json.JSONObject;

import java.io.UnsupportedEncodingException;
import java.util.Map;

/**
 * 账户相关的请求封装类
 * Created by lmye on 2015/8/12.
 */
public class AccountRequest<T> extends Request<AccountResponse> {

    private Response.Listener<AccountResponse> listener;
    private Map<String, String> map;
    private String url;

    public AccountRequest(int method, String url, Map<String, String> params, Response.Listener listener, Response.ErrorListener errorlistener) {
        super(method, url, errorlistener);
        this.listener = listener;
        this.map = params;
        this.url = url;
    }

    @Override
    protected Response<AccountResponse> parseNetworkResponse(NetworkResponse networkResponse) {
        try {
            String jsonString = new String(networkResponse.data,
                    HttpHeaderParser.parseCharset(networkResponse.headers));
            AccountResponse accountResponse = parseJson(jsonString);
            return Response.success(accountResponse, HttpHeaderParser.parseCacheHeaders(networkResponse));

        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
            Log.d(VolleyClient.TAG, "parseNetworkResponse fail");
            Log.w(VolleyClient.TAG, "" + e.getLocalizedMessage());
        }
        return null;
    }

    @Override
    protected void deliverResponse(AccountResponse accountResponse) {
        listener.onResponse(accountResponse);
    }

    @Override
    protected Map<String, String> getParams() throws AuthFailureError {
        return map;
    }

    private AccountResponse parseJson(String json) {
        boolean success = false;
        String object = null;
        String msg = null;
        if (TextUtils.isEmpty(json)) {
            Log.d(VolleyClient.TAG, "the Request:" + url + " return json is null");
            AccountResponse response = new AccountResponse();
            response.setSuccess(false);
            response.setMsg("服务器访问失败");
            response.setObject(object);
            return response;
        }
        try {
            JSONObject jsonObject = new JSONObject(json);
            success = jsonObject.has("success") ? jsonObject.getBoolean("success") : false;
            object = jsonObject.has("object") ? jsonObject.getString("object") : "";
            msg = jsonObject.has("msg") ? jsonObject.getString("msg") : "";
        } catch (JSONException e) {
            e.printStackTrace();
        }
        AccountResponse response = new AccountResponse();
        response.setSuccess(success);
        response.setObject(object);
        response.setMsg(msg);
        return response;
    }
}
